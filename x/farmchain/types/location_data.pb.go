// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: farmchain/location_data.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type LocationData struct {
	Timestamp        string `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Location         string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Temperature      string `protobuf:"bytes,3,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Humidity         string `protobuf:"bytes,4,opt,name=humidity,proto3" json:"humidity,omitempty"`
	SoilMoisture     string `protobuf:"bytes,5,opt,name=soilMoisture,proto3" json:"soilMoisture,omitempty"`
	GrowthPercentage string `protobuf:"bytes,6,opt,name=growthPercentage,proto3" json:"growthPercentage,omitempty"`
	Crop             string `protobuf:"bytes,7,opt,name=crop,proto3" json:"crop,omitempty"`
	Creator          string `protobuf:"bytes,8,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *LocationData) Reset()         { *m = LocationData{} }
func (m *LocationData) String() string { return proto.CompactTextString(m) }
func (*LocationData) ProtoMessage()    {}
func (*LocationData) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3f89afbfc83c2d, []int{0}
}
func (m *LocationData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LocationData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LocationData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LocationData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocationData.Merge(m, src)
}
func (m *LocationData) XXX_Size() int {
	return m.Size()
}
func (m *LocationData) XXX_DiscardUnknown() {
	xxx_messageInfo_LocationData.DiscardUnknown(m)
}

var xxx_messageInfo_LocationData proto.InternalMessageInfo

func (m *LocationData) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *LocationData) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *LocationData) GetTemperature() string {
	if m != nil {
		return m.Temperature
	}
	return ""
}

func (m *LocationData) GetHumidity() string {
	if m != nil {
		return m.Humidity
	}
	return ""
}

func (m *LocationData) GetSoilMoisture() string {
	if m != nil {
		return m.SoilMoisture
	}
	return ""
}

func (m *LocationData) GetGrowthPercentage() string {
	if m != nil {
		return m.GrowthPercentage
	}
	return ""
}

func (m *LocationData) GetCrop() string {
	if m != nil {
		return m.Crop
	}
	return ""
}

func (m *LocationData) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*LocationData)(nil), "cosmonaut.farmchain.farmchain.LocationData")
}

func init() { proto.RegisterFile("farmchain/location_data.proto", fileDescriptor_2b3f89afbfc83c2d) }

var fileDescriptor_2b3f89afbfc83c2d = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xcf, 0x4a, 0xf3, 0x40,
	0x14, 0xc5, 0x93, 0x7e, 0xfd, 0xfa, 0x67, 0xec, 0x42, 0x66, 0x35, 0x88, 0x1d, 0x4a, 0x57, 0xe2,
	0x22, 0x11, 0x7c, 0x03, 0x71, 0x25, 0x0a, 0xe2, 0xd2, 0x8d, 0xdc, 0x4e, 0xc7, 0x64, 0xa0, 0x93,
	0x1b, 0x66, 0x6e, 0xd0, 0xee, 0x7d, 0x00, 0x1f, 0xcb, 0x65, 0x97, 0x2e, 0x25, 0x79, 0x11, 0x71,
	0x34, 0x49, 0xc5, 0xdd, 0x39, 0xbf, 0x73, 0x0f, 0x17, 0x0e, 0x9b, 0x3f, 0x82, 0xb3, 0x2a, 0x07,
	0x53, 0xa4, 0x1b, 0x54, 0x40, 0x06, 0x8b, 0x87, 0x35, 0x10, 0x24, 0xa5, 0x43, 0x42, 0x3e, 0x57,
	0xe8, 0x2d, 0x16, 0x50, 0x51, 0xd2, 0x1d, 0xf6, 0x6a, 0xf9, 0x32, 0x60, 0xb3, 0xeb, 0x9f, 0xda,
	0x25, 0x10, 0xf0, 0x63, 0x36, 0x25, 0x63, 0xb5, 0x27, 0xb0, 0xa5, 0x88, 0x17, 0xf1, 0xc9, 0xf4,
	0xae, 0x07, 0xfc, 0x88, 0x4d, 0xda, 0x27, 0x62, 0x10, 0xc2, 0xce, 0xf3, 0x05, 0x3b, 0x20, 0x6d,
	0x4b, 0xed, 0x80, 0x2a, 0xa7, 0xc5, 0xbf, 0x10, 0xef, 0xa3, 0xaf, 0x76, 0x5e, 0x59, 0xb3, 0x36,
	0xb4, 0x15, 0xc3, 0xef, 0x76, 0xeb, 0xf9, 0x92, 0xcd, 0x3c, 0x9a, 0xcd, 0x0d, 0x1a, 0x1f, 0xea,
	0xff, 0x43, 0xfe, 0x8b, 0xf1, 0x53, 0x76, 0x98, 0x39, 0x7c, 0xa2, 0xfc, 0x56, 0x3b, 0xa5, 0x0b,
	0x82, 0x4c, 0x8b, 0x51, 0xb8, 0xfb, 0xc3, 0x39, 0x67, 0x43, 0xe5, 0xb0, 0x14, 0xe3, 0x90, 0x07,
	0xcd, 0x05, 0x1b, 0x2b, 0xa7, 0x81, 0xd0, 0x89, 0x49, 0xc0, 0xad, 0xbd, 0xb8, 0x7a, 0xab, 0x65,
	0xbc, 0xab, 0x65, 0xfc, 0x51, 0xcb, 0xf8, 0xb5, 0x91, 0xd1, 0xae, 0x91, 0xd1, 0x7b, 0x23, 0xa3,
	0xfb, 0xb3, 0xcc, 0x50, 0x5e, 0xad, 0x12, 0x85, 0x36, 0xed, 0xa6, 0x4c, 0xfb, 0xcd, 0x9f, 0xf7,
	0x34, 0x6d, 0x4b, 0xed, 0x57, 0xa3, 0x30, 0xfc, 0xf9, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x29,
	0xf7, 0x8a, 0x87, 0x99, 0x01, 0x00, 0x00,
}

func (m *LocationData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LocationData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LocationData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintLocationData(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Crop) > 0 {
		i -= len(m.Crop)
		copy(dAtA[i:], m.Crop)
		i = encodeVarintLocationData(dAtA, i, uint64(len(m.Crop)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.GrowthPercentage) > 0 {
		i -= len(m.GrowthPercentage)
		copy(dAtA[i:], m.GrowthPercentage)
		i = encodeVarintLocationData(dAtA, i, uint64(len(m.GrowthPercentage)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.SoilMoisture) > 0 {
		i -= len(m.SoilMoisture)
		copy(dAtA[i:], m.SoilMoisture)
		i = encodeVarintLocationData(dAtA, i, uint64(len(m.SoilMoisture)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Humidity) > 0 {
		i -= len(m.Humidity)
		copy(dAtA[i:], m.Humidity)
		i = encodeVarintLocationData(dAtA, i, uint64(len(m.Humidity)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Temperature) > 0 {
		i -= len(m.Temperature)
		copy(dAtA[i:], m.Temperature)
		i = encodeVarintLocationData(dAtA, i, uint64(len(m.Temperature)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Location) > 0 {
		i -= len(m.Location)
		copy(dAtA[i:], m.Location)
		i = encodeVarintLocationData(dAtA, i, uint64(len(m.Location)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Timestamp) > 0 {
		i -= len(m.Timestamp)
		copy(dAtA[i:], m.Timestamp)
		i = encodeVarintLocationData(dAtA, i, uint64(len(m.Timestamp)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintLocationData(dAtA []byte, offset int, v uint64) int {
	offset -= sovLocationData(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *LocationData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Timestamp)
	if l > 0 {
		n += 1 + l + sovLocationData(uint64(l))
	}
	l = len(m.Location)
	if l > 0 {
		n += 1 + l + sovLocationData(uint64(l))
	}
	l = len(m.Temperature)
	if l > 0 {
		n += 1 + l + sovLocationData(uint64(l))
	}
	l = len(m.Humidity)
	if l > 0 {
		n += 1 + l + sovLocationData(uint64(l))
	}
	l = len(m.SoilMoisture)
	if l > 0 {
		n += 1 + l + sovLocationData(uint64(l))
	}
	l = len(m.GrowthPercentage)
	if l > 0 {
		n += 1 + l + sovLocationData(uint64(l))
	}
	l = len(m.Crop)
	if l > 0 {
		n += 1 + l + sovLocationData(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovLocationData(uint64(l))
	}
	return n
}

func sovLocationData(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozLocationData(x uint64) (n int) {
	return sovLocationData(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *LocationData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLocationData
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LocationData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LocationData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocationData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocationData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocationData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Timestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocationData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocationData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocationData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Temperature", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocationData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocationData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocationData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Temperature = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Humidity", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocationData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocationData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocationData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Humidity = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SoilMoisture", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocationData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocationData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocationData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SoilMoisture = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GrowthPercentage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocationData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocationData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocationData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GrowthPercentage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Crop", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocationData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocationData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocationData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Crop = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocationData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocationData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocationData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLocationData(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLocationData
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipLocationData(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowLocationData
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLocationData
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLocationData
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthLocationData
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupLocationData
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthLocationData
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthLocationData        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowLocationData          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupLocationData = fmt.Errorf("proto: unexpected end of group")
)
